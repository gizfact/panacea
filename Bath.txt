CREATE TABLE VISITS_BATH
(
  ROWID Bigint NOT NULL,
  ABONEMENTID Bigint DEFAULT 0,
  PERSONID Bigint DEFAULT 0,
  SERVICEID Bigint DEFAULT 0,
  VISITSDATE Decimal(18,13) NOT NULL,
  BEGTIME Decimal(18,13) NOT NULL,
  ENDTIME Decimal(18,13) NOT NULL,
  PRICE Decimal(18,13) DEFAULT 0,
  CDATE Decimal(18,13) NOT NULL,
  CUID Bigint NOT NULL,
  EDATE Decimal(18,13) NOT NULL,
  EUID Bigint NOT NULL,
  SYNC Smallint DEFAULT 0,
  PARENTID Bigint,
  PRIMARY KEY (ROWID)
);

CREATE GENERATOR GEN_VISITS_BATH_ROWID;

SET TERM ^ ;
CREATE TRIGGER TRI_VISITS_BATH_BI FOR VISITS_BATH ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    /* enter trigger code here */
    if (NEW.ROWID=0 or NEW.ROWID is null) then
    begin
    NEW.ROWID=gen_id(GEN_VISITS_BATH_ROWID,1); 
    end
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER TRI_VISITS_BATH_DEL FOR VISITS_BATH ACTIVE
AFTER DELETE POSITION 0
AS 
BEGIN 
    /* enter trigger code here */ 
    INSERT INTO SYNCDEL VALUES(OLD.ROWID,'VISITS_BATH');
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER TRI_VISITS_BATH_UPD FOR VISITS_BATH ACTIVE
BEFORE UPDATE POSITION 0
AS 
BEGIN 
    /* enter trigger code here */ 
	if(OLD.SYNC = NEW.SYNC) then
	begin
		NEW.SYNC=0;
	end
END^
SET TERM ; ^

CREATE TABLE ABONEMENTS_BATH
(
  ROWID Bigint NOT NULL,
  ABONEMENTID Bigint DEFAULT 0,
  CLIENTID Bigint NOT NULL,
  ABTYPEID Bigint NOT NULL,
  PERSONID Bigint DEFAULT 0,
  SERVICEID Bigint DEFAULT 0,
  NAME Varchar(128) NOT NULL,
  PRICE Decimal(18,13) DEFAULT 0,
  ABONEMENTSCOUNT Integer DEFAULT 0,
  DISCOUNT Decimal(18,13) DEFAULT 0,
  AUTOFLOW Integer DEFAULT 14,
  BEGDATE Decimal(18,13) NOT NULL,
  ENDDATE Decimal(18,13) NOT NULL,
  CLOSED Integer DEFAULT 0,
  CDATE Decimal(18,13) NOT NULL,
  CUID Bigint NOT NULL,
  EDATE Decimal(18,13) NOT NULL,
  EUID Bigint NOT NULL,
  FIXSUM Decimal(18,13) DEFAULT 0,
  SYNC Smallint DEFAULT 0,
  PRIMARY KEY (ROWID)
);

CREATE GENERATOR GEN_ABONEMENTS_BATH_ROWID;

SET TERM ^ ;
CREATE TRIGGER TRI_ABONEMENTS_BATH_BI FOR ABONEMENTS_BATH ACTIVE
BEFORE INSERT POSITION 0
AS 
BEGIN 
    /* enter trigger code here */
    if (NEW.ROWID=0 or NEW.ROWID is null) then
    begin
    NEW.ROWID=gen_id(GEN_ABONEMENTS_BATH_ROWID,1); 
    end
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER TRI_ABONEMENTS_BATH_DEL FOR ABONEMENTS_BATH ACTIVE
AFTER DELETE POSITION 0
AS 
BEGIN 
    /* enter trigger code here */ 
    INSERT INTO SYNCDEL VALUES(OLD.ROWID,'ABONEMENTS_BATH');
END^
SET TERM ; ^

SET TERM ^ ;
CREATE TRIGGER TRI_ABONEMENTS_BATH_UPD FOR ABONEMENTS_BATH ACTIVE
BEFORE UPDATE POSITION 0
AS 
BEGIN 
    /* enter trigger code here */ 
	if(OLD.SYNC = NEW.SYNC) then
	begin
		NEW.SYNC=0;
	end
END^
SET TERM ; ^

ALTER TABLE ABTYPES ADD 
BATH Smallint default 0;
UPDATE ABTYPES 
SET BATH = '0' 
WHERE BATH IS NULL;

ALTER TABLE ABTYPES ADD 
ABTYPE Smallint default 0;
UPDATE ABTYPES 
SET ABTYPE = '0' 
WHERE ABTYPE IS NULL;

/* Создать индекс для RESERVE.FITGROUPID */
/* Создать индекс для BILLITEMS.ABTYPEID */

CREATE TABLE RESERVE_DEL
(
  ROWID Bigint NOT NULL,
  CLIENTID Bigint NOT NULL,
  BEGDATE Decimal(18,13) NOT NULL,
  ENDDATE Decimal(18,13) NOT NULL,
  PERSONID Bigint NOT NULL,
  SERVICEID Bigint NOT NULL,
  STATUS Integer DEFAULT 0,
  FITGROUPID Bigint DEFAULT 0,
  QUAN Integer NOT NULL,
  PARENTID Bigint,
  CDATE Decimal(18,13) NOT NULL,
  CUID Bigint NOT NULL,
  SYNC Smallint DEFAULT 0,
  NUM Integer DEFAULT 0,
  PRICE Decimal(18,13) DEFAULT 0,
  EDATE Decimal(18,13),
  EUID Bigint
);

